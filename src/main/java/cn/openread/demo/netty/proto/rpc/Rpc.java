// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rpc.proto

package cn.openread.demo.netty.proto.rpc;

public final class Rpc {
    static final com.google.protobuf.Descriptors.Descriptor
            internal_static_cn_openread_demo_netty_proto_rpc_RPCRequest_descriptor;
    static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_cn_openread_demo_netty_proto_rpc_RPCRequest_fieldAccessorTable;
    static final com.google.protobuf.Descriptors.Descriptor
            internal_static_cn_openread_demo_netty_proto_rpc_RPCResponse_descriptor;
    static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_cn_openread_demo_netty_proto_rpc_RPCResponse_fieldAccessorTable;
    private static com.google.protobuf.Descriptors.FileDescriptor
            descriptor;

    static {
        java.lang.String[] descriptorData = {
                "\n\trpc.proto\022 cn.openread.demo.netty.prot" +
                        "o.rpc\"f\n\nRPCRequest\022\n\n\002id\030\001 \001(\003\022\023\n\013servi" +
                        "ceName\030\002 \001(\t\022\022\n\nmethodName\030\003 \001(\t\022\022\n\npara" +
                        "meters\030\004 \001(\t\022\017\n\007version\030\005 \001(\003\"c\n\013RPCResp" +
                        "onse\022\n\n\002id\030\001 \001(\003\022\023\n\013serviceName\030\002 \001(\t\022\022\n" +
                        "\nmethodName\030\003 \001(\t\022\016\n\006result\030\004 \001(\t\022\017\n\007ver" +
                        "sion\030\005 \001(\003B\002P\001b\006proto3"
        };
        com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
                new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
                    public com.google.protobuf.ExtensionRegistry assignDescriptors(
                            com.google.protobuf.Descriptors.FileDescriptor root) {
                        descriptor = root;
                        return null;
                    }
                };
        com.google.protobuf.Descriptors.FileDescriptor
                .internalBuildGeneratedFileFrom(descriptorData,
                        new com.google.protobuf.Descriptors.FileDescriptor[]{
                        }, assigner);
        internal_static_cn_openread_demo_netty_proto_rpc_RPCRequest_descriptor =
                getDescriptor().getMessageTypes().get(0);
        internal_static_cn_openread_demo_netty_proto_rpc_RPCRequest_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_cn_openread_demo_netty_proto_rpc_RPCRequest_descriptor,
                new java.lang.String[]{"Id", "ServiceName", "MethodName", "Parameters", "Version",});
        internal_static_cn_openread_demo_netty_proto_rpc_RPCResponse_descriptor =
                getDescriptor().getMessageTypes().get(1);
        internal_static_cn_openread_demo_netty_proto_rpc_RPCResponse_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_cn_openread_demo_netty_proto_rpc_RPCResponse_descriptor,
                new java.lang.String[]{"Id", "ServiceName", "MethodName", "Result", "Version",});
    }

    private Rpc() {
    }

    public static void registerAllExtensions(
            com.google.protobuf.ExtensionRegistryLite registry) {
    }

    public static void registerAllExtensions(
            com.google.protobuf.ExtensionRegistry registry) {
        registerAllExtensions(
                (com.google.protobuf.ExtensionRegistryLite) registry);
    }

    public static com.google.protobuf.Descriptors.FileDescriptor
    getDescriptor() {
        return descriptor;
    }

    // @@protoc_insertion_point(outer_class_scope)
}
